// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CepClient is an autogenerated mock type for the CepClient type
type CepClient struct {
	mock.Mock
}

// AddressByCep provides a mock function with given fields: ctx, cep
func (_m *CepClient) AddressByCep(ctx context.Context, cep string) (string, error) {
	ret := _m.Called(ctx, cep)

	if len(ret) == 0 {
		panic("no return value specified for AddressByCep")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, cep)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, cep)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, cep)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCepClient creates a new instance of CepClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCepClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *CepClient {
	mock := &CepClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
